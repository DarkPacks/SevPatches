buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

def buildnumber = null

if (System.getenv('GITHUB_ACTIONS'))
    buildnumber = System.getenv('GITHUB_WORKFLOW') == 'Release' ? System.getenv('GITHUB_RUN_NUMBER') : System.getenv('GITHUB_SHA').substring(0, 7)

def suffix = buildnumber != null ? buildnumber : 'SNAPSHOT'

version = "$version_base-$suffix"
group = 'tv.darkosto.sevpatches'
archivesBaseName = 'sevpatches'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    accessTransformer = file('src/main/resources/META-INF/sevpatches_at.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            jvmArg '-Dfml.coreMods.load=tv.darkosto.sevpatches.core.SevPatchesLoadingPlugin'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            jvmArg '-Dfml.coreMods.load=tv.darkosto.sevpatches.core.SevPatchesLoadingPlugin'
        }
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    maven { url "https://repo.spongepowered.org/maven" }
    maven { url 'https://dvs1.progwml6.com/files/maven' }
    maven { url "https://www.cursemaven.com" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    shade('org.spongepowered:mixin:0.8') {
        transitive = false
    }

    compile 'curse.maven:astralsorcery-1.0.23-241721:2920254'
    compile 'curse.maven:jaff-1.7-235261:2448284'
    compile 'slimeknights:TConstruct:1.12.2-2.13.0.184'
    compile 'curse.maven:realisticitemdrops_deobf_1.2.14-245620:2630385'
}

mixin {
    add sourceSets.main, "mixins.sevpatches.refmap.json"
}

jar {
    manifest {
        attributes([
                "Specification-Title"        : "sevpatches",
                "Specification-Vendor"       : "RobertDropTable",
                "Specification-Version"      : "1", // We are version 1 of ourselves
                "Implementation-Title"       : project.name,
                "Implementation-Version"     : "${version}",
                "Implementation-Vendor"      : "RobertDropTable",
                "Implementation-Timestamp"   : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass"                 : "org.spongepowered.asm.launch.MixinTweaker",
                "FMLCorePlugin"              : "tv.darkosto.sevpatches.core.SevPatchesLoadingPlugin",
                "FMLCorePluginContainsFMLMod": "true",
                "ForceLoadAsMod"             : "true",
                "FMLAT"                      : "sevpatches_at.cfg",
        ])
    }

    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            rename 'LICENSE.txt', 'org/spongepowered/LICENSE.txt'

            exclude 'META-INF/*.SF'
            exclude 'META-INF/*.RSA'
            exclude 'META-INF/*.MF'

            exclude '**/*.html'
        }
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
